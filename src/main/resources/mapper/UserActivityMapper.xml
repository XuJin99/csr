<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blockchain.csr.mapper.UserActivityMapper">
  <resultMap id="BaseResultMap" type="com.blockchain.csr.model.entity.UserActivity">
    <!--@mbg.generated-->
    <!--@Table user_activity-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="activity_id" jdbcType="INTEGER" property="activityId" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="endorsed_by" jdbcType="INTEGER" property="endorsedBy" />
    <result column="endorsed_at" jdbcType="TIMESTAMP" property="endorsedAt" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="chain_id" jdbcType="VARCHAR" property="chainId" />
    <result column="detail" jdbcType="LONGVARCHAR" property="detail" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, user_id, activity_id, `state`, endorsed_by, endorsed_at, created_at, chain_id, 
    detail
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from user_activity
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from user_activity
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.blockchain.csr.model.entity.UserActivity">
    <!--@mbg.generated-->
    insert into user_activity (id, user_id, activity_id, 
      `state`, endorsed_by, endorsed_at, 
      created_at, chain_id, detail
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{activityId,jdbcType=INTEGER}, 
      #{state,jdbcType=VARCHAR}, #{endorsedBy,jdbcType=INTEGER}, #{endorsedAt,jdbcType=TIMESTAMP}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{chainId,jdbcType=VARCHAR}, #{detail,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.blockchain.csr.model.entity.UserActivity">
    <!--@mbg.generated-->
    insert into user_activity
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="activityId != null">
        activity_id,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="endorsedBy != null">
        endorsed_by,
      </if>
      <if test="endorsedAt != null">
        endorsed_at,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="chainId != null">
        chain_id,
      </if>
      <if test="detail != null">
        detail,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="activityId != null">
        #{activityId,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="endorsedBy != null">
        #{endorsedBy,jdbcType=INTEGER},
      </if>
      <if test="endorsedAt != null">
        #{endorsedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="chainId != null">
        #{chainId,jdbcType=VARCHAR},
      </if>
      <if test="detail != null">
        #{detail,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.blockchain.csr.model.entity.UserActivity">
    <!--@mbg.generated-->
    update user_activity
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="activityId != null">
        activity_id = #{activityId,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=VARCHAR},
      </if>
      <if test="endorsedBy != null">
        endorsed_by = #{endorsedBy,jdbcType=INTEGER},
      </if>
      <if test="endorsedAt != null">
        endorsed_at = #{endorsedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="chainId != null">
        chain_id = #{chainId,jdbcType=VARCHAR},
      </if>
      <if test="detail != null">
        detail = #{detail,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.blockchain.csr.model.entity.UserActivity">
    <!--@mbg.generated-->
    update user_activity
    set user_id = #{userId,jdbcType=INTEGER},
      activity_id = #{activityId,jdbcType=INTEGER},
      `state` = #{state,jdbcType=VARCHAR},
      endorsed_by = #{endorsedBy,jdbcType=INTEGER},
      endorsed_at = #{endorsedAt,jdbcType=TIMESTAMP},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      chain_id = #{chainId,jdbcType=VARCHAR},
      detail = #{detail,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>