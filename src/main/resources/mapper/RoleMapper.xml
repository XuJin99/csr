<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blockchain.csr.mapper.RoleMapper">
  <resultMap id="BaseResultMap" type="com.blockchain.csr.model.entity.Role">
    <!--@mbg.generated-->
    <!--@Table `role`-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="role" jdbcType="VARCHAR" property="role" />
    <result column="activity_id" jdbcType="INTEGER" property="activityId" />
    <result column="event_name" jdbcType="VARCHAR" property="eventName" />
    <result column="activity_name" jdbcType="VARCHAR" property="activityName" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, `role`, activity_id, event_name, activity_name
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from `role`
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from `role`
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.blockchain.csr.model.entity.Role">
    <!--@mbg.generated-->
    insert into `role` (id, `role`, activity_id, 
      event_name, activity_name)
    values (#{id,jdbcType=INTEGER}, #{role,jdbcType=VARCHAR}, #{activityId,jdbcType=INTEGER}, 
      #{eventName,jdbcType=VARCHAR}, #{activityName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.blockchain.csr.model.entity.Role">
    <!--@mbg.generated-->
    insert into `role`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="role != null">
        `role`,
      </if>
      <if test="activityId != null">
        activity_id,
      </if>
      <if test="eventName != null">
        event_name,
      </if>
      <if test="activityName != null">
        activity_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="role != null">
        #{role,jdbcType=VARCHAR},
      </if>
      <if test="activityId != null">
        #{activityId,jdbcType=INTEGER},
      </if>
      <if test="eventName != null">
        #{eventName,jdbcType=VARCHAR},
      </if>
      <if test="activityName != null">
        #{activityName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.blockchain.csr.model.entity.Role">
    <!--@mbg.generated-->
    update `role`
    <set>
      <if test="role != null">
        `role` = #{role,jdbcType=VARCHAR},
      </if>
      <if test="activityId != null">
        activity_id = #{activityId,jdbcType=INTEGER},
      </if>
      <if test="eventName != null">
        event_name = #{eventName,jdbcType=VARCHAR},
      </if>
      <if test="activityName != null">
        activity_name = #{activityName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.blockchain.csr.model.entity.Role">
    <!--@mbg.generated-->
    update `role`
    set `role` = #{role,jdbcType=VARCHAR},
      activity_id = #{activityId,jdbcType=INTEGER},
      event_name = #{eventName,jdbcType=VARCHAR},
      activity_name = #{activityName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>