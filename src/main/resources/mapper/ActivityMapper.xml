<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blockchain.csr.mapper.ActivityMapper">
  <resultMap id="BaseResultMap" type="com.blockchain.csr.model.entity.Activity">
    <!--@mbg.generated-->
    <!--@Table activity-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="event_id" jdbcType="INTEGER" property="eventId" />
    <result column="template_id" jdbcType="INTEGER" property="templateId" />
    <result column="total_time" jdbcType="INTEGER" property="totalTime" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
    <result column="description" jdbcType="VARCHAR" property="description" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, `name`, event_id, template_id, total_time, icon, description
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from activity
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from activity
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.blockchain.csr.model.entity.Activity">
    <!--@mbg.generated-->
    insert into activity (id, `name`, event_id, 
      template_id, total_time, icon, 
      description)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{eventId,jdbcType=INTEGER}, 
      #{templateId,jdbcType=INTEGER}, #{totalTime,jdbcType=INTEGER}, #{icon,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.blockchain.csr.model.entity.Activity">
    <!--@mbg.generated-->
    insert into activity
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="eventId != null">
        event_id,
      </if>
      <if test="templateId != null">
        template_id,
      </if>
      <if test="totalTime != null">
        total_time,
      </if>
      <if test="icon != null">
        icon,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="eventId != null">
        #{eventId,jdbcType=INTEGER},
      </if>
      <if test="templateId != null">
        #{templateId,jdbcType=INTEGER},
      </if>
      <if test="totalTime != null">
        #{totalTime,jdbcType=INTEGER},
      </if>
      <if test="icon != null">
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.blockchain.csr.model.entity.Activity">
    <!--@mbg.generated-->
    update activity
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="eventId != null">
        event_id = #{eventId,jdbcType=INTEGER},
      </if>
      <if test="templateId != null">
        template_id = #{templateId,jdbcType=INTEGER},
      </if>
      <if test="totalTime != null">
        total_time = #{totalTime,jdbcType=INTEGER},
      </if>
      <if test="icon != null">
        icon = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.blockchain.csr.model.entity.Activity">
    <!--@mbg.generated-->
    update activity
    set `name` = #{name,jdbcType=VARCHAR},
      event_id = #{eventId,jdbcType=INTEGER},
      template_id = #{templateId,jdbcType=INTEGER},
      total_time = #{totalTime,jdbcType=INTEGER},
      icon = #{icon,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>